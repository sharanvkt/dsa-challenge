74. Search a 2D Matrix

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        
        /////********brute*****//////
        
        // for(int i=0;i<matrix.length;i++){
        //     if(target>=matrix[i][0]){
        //         for(int j=0;j<matrix[0].length;j++){
        //             if(matrix[i][j]==target) return true;
        //         }
        //     }
        // } return false;
        
        //////////**********better**********///////
        int m= matrix.length;
        int n= matrix[0].length; 
        
        int i=0, j=n-1;
        
        while(i<m && j>=0){
            if(matrix[i][j]==target){
            return true;            
        } else if(target<matrix[i][j]){
            j--;            
        }else{ 
            i++;
        }
    }return false;
        
        ///////********Optimal*********///////
        
//         int n= matrix.length;
//         int m= matrix[0].length; 
//         int low=0, high=(n*m)-1;
        
//         while(low<=high){
            
//             int mid=(low+(high-low)/2);
//             if(matrix[mid/m][mid%m]==target){
//                 return true;
//             }
//             if(matrix[mid/m][mid%m]<target){
//                 low=mid+1;
//             }else{
//                 high=mid-1;
//             }
//         } return false;
    }
}
